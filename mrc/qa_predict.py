# -*- coding: utf-8 -*-
"""QA_Predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18YDNMtSXyqi7Se-lTRg3Ve8HbRDmrXUl
"""


from haystack.document_stores import InMemoryDocumentStore, SQLDocumentStore
from haystack.nodes import FARMReader, TransformersReader, TfidfRetriever
from haystack.utils import clean_wiki_text, convert_files_to_dicts, fetch_archive_from_http, print_answers
from haystack.pipelines import ExtractiveQAPipeline
from pprint import pprint
import re

def load():
    # In-Memory Document Store
    document_store = InMemoryDocumentStore()

    # document_store = SQLDocumentStore(url="sqlite:///qa.db")

    dicts = convert_files_to_dicts(dir_path='mrc/ourtxt', clean_func=clean_wiki_text, split_paragraphs=True)

    document_store.write_documents(dicts)

    retriever = TfidfRetriever(document_store=document_store)

    reader = FARMReader(model_name_or_path='mrc/my_model', use_gpu=False)

    pipe = ExtractiveQAPipeline(reader, retriever)

    return pipe

def predict(input, pipe, pattern):
    print("start")
    prediction = pipe.run(
        query=input, params={"Retriever": {"top_k": 5}, "Reader": {"top_k": 1}}
    )
    print("end")
    # pprint(prediction)

    result = pattern.findall(str(prediction['answers'][0]))

    print(result)

    return result

# def result_process(result, pattern):
#
#     result = pattern.findall(str(result['answers'][0]))
#
#     print(result)
#
#     return result

if __name__ == "__main__":

    pipeline = load()

    pattern = re.compile("<Answer: answer='(.*?)', score")

    predict("what is kopi?", pipeline, pattern)



